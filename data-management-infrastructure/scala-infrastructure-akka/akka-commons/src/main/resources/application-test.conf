


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = off
  stdout-loglevel = "OFF"

  actor {
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
      event-stream = on
      unhandled = on
      router-misconfiguration = on
    }
  }

  persistence {

    journal {
      # leveldb-shared only for test
      # start: val store = system.actorOf(Props[SharedLeveldbStore], "store")
      # init: SharedLeveldbJournal.setStore(store, testSystem)
      plugin = "akka.persistence.journal.leveldb-shared"
      auto-start-journals = []

      leveldb-shared {
        store.dir = "target/shared"
      }
    }

    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      auto-start-snapshot-stores = []

      local {
        dir = "target/snapshots"
      }

    }

  }

}