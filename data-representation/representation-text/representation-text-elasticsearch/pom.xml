<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.spike.giantdataanalysis</groupId>
		<artifactId>representation-text</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>representation-text-elasticsearch</artifactId>
	<name>representation-text-elasticsearch</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<lucene.version>7.2.1</lucene.version><!-- 覆盖父项目中的版本 -->
		<!-- changed from 2.8.10 at 20191008 -->
		<jackson.version>2.10.0</jackson.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.spike.giantdataanalysis</groupId>
			<artifactId>infrastructure-commons</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.dataformat</groupId>
					<artifactId>jackson-dataformat-yaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>


		<!-- Java Client -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>transport</artifactId>
			<version>${elasticsearch.version}</version>
		</dependency>

		<!-- jackson -->
		<!-- REF: https://github.com/FasterXML/jackson-databind/ -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- ES测试的依赖 -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-test-framework</artifactId>
			<version>${lucene.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency><!-- for LuceneTestCase -->
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-codecs</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency><!-- for JNA -->
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<version>4.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.test</groupId>
			<artifactId>framework</artifactId>
			<version>${elasticsearch.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency><!-- for randomized testing -->
			<groupId>com.carrotsearch.randomizedtesting</groupId>
			<artifactId>randomizedtesting-runner</artifactId>
			<version>${randomizedtesting.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

	</dependencies>

	<build>
		<!-- randomizedtesting example: -->
		<!-- https://github.com/randomizedtesting/randomizedtesting/blob/master/examples/maven/pom.xml -->
		<plugins>
			<!-- We don't want to use surefire to run our tests so we skip it. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<!-- !!! LOOK HERE !!! Run tests with JUnit4 instead. A simple configuration
				here. -->
			<plugin>
				<groupId>com.carrotsearch.randomizedtesting</groupId>
				<artifactId>junit4-maven-plugin</artifactId>
				<version>${randomizedtesting.version}</version>
				<executions>
					<execution>
						<id>junit4-tests</id>
						<goals>
							<goal>junit4</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<!-- 配置见: http://randomizedtesting.github.io/randomizedtesting/releases/2.4.0/ant/Tasks/junit4.html -->
							<!-- Some of these examples have intentional failures, so don't fail
								on errors. -->
							<haltOnFailure>false</haltOnFailure>

							<!-- Our tests are in primary classes folder. -->
							<!-- <testClassesDirectory>${project.build.outputDirectory}</testClassesDirectory> -->

							<!-- Attach a simple listener. -->
							<listeners>
								<report-text showThrowable="false"
									showStackTraces="false" showOutput="never" showStatusOk="true"
									showStatusError="true" showStatusFailure="true"
									showStatusIgnored="true" showSuiteSummary="false" />

								<!-- JSON report with HTML scaffolding. -->
								<report-json
									file="${project.build.outputDirectory}/result-json/results.html" />
							</listeners>

							<!-- 这种方式开启断言不行! -->
							<!-- <jvmarg value="-ea" /> -->
							<!-- 用这种方式 -->
							<assertions>
								<!-- <enable package="com.spike.text.elasticsearch.test" /> -->
								<enable />
							</assertions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
